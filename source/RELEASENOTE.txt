** Qt porting and FM-7/77/AV/AV40/EX for Common Source Code Project **

                                                       August 07, 2018
                            K.Ohta  (whatisthis.sowhat _at_ gmail.com)

1.About

This package is Qt5 porting of Common Source Code Project (CSP)
and built with Qt5, for Windows, built with MinGW(32bit).

Source Code:

   https://github.com/Artanejp/common_source_project-fm7/releases/tag/SNAPSHOT_20180807
   
Additional INFO:

   Binaries will be available, distibute from osdn.net.
   
   See, https://osdn.net/projects/csp-qt/  and
        https://osdn.net/projects/csp-qt/releases/ .
	
   Released at:


2.Background

Common Source Code Project (CSP) is good emulator writing.
It also distributed with GPLv2, this is good for me.

But codes are specified to M$ Visual C.
I'm using GNU/Linux, and I starting to apply FM-7(or later).

So, I start to port to GNU/Linux and using Qt4/Qt5.

What you need at least:

a. Qt5 (neither Qt3 and Qt4) toolkit: Qt5.3 or later.

b. Some OpenGL implementation, maybe at leaset OpenGL v2.x .

c. gcc / g++ (5.0 or later? ) or llvm clang / clang++ (3.5 or later?) toolchain.

d. SDL2 (not SDL1.x).

e. CMake 2.8 or later.

f. Needs ffmpeg.See https://ffmpeg.org/ .

g. FFMpeg has bundled only for Win32.Please install for other OSs if not working.

h. Built with Qt5.5 (for Ubuntu 16.04LTS) or Qt 5.10 (for Win32 and Debian/Sid).

i. Now, changed default drawing infrastructure to OpenGL ES2.You can change --opengl option via comman line (or GUI).

* TIPS: If emufoo.exe don't show screen drawing, set environment variable QT_OPENGL to software (i.e. Using Windows as VirtualBox's gueat OS).


3.How to build:

After extracting (or git pulled) sourcecodes:

$ cd {srctop}/source/build-cmake/{Machine name}/

$ mkdir build

$ cd build

To configure:

$ cmake ..

or

$ ccmake ..

To build:

$ make

To install:

$ sudo make install

4.Qt specified notice:
   
   ・Config file (scancode.cfg and foo.ini) has placed (moved) to
     "~/.config/CommonSourceCodeProject/emufoo/"
     (for Windows, ".\CommonSourceCodeProject\emudfoo\" ).
   
   ・BIOS, WAVS, BINS and SAVED STATES have placed (moved) to
     "~/CommonSourceCodeProject/emufoo/"
     (for Windows, ".\CommonSourceCodeProject\emudfoo\" ).
   
   ・All of recorded products (PNG Screenshots, MOVIES, SOUNDS) 
     have *temporally* written to "~/.config/CommonSourceCodeProject/emufoo/"
     (for Windows, ".\CommonSourceCodeProject\emudfoo\" ).
   
   ・Added ToolTips and Japanese translations.(2017-01-24)
   
   ・Place R@Ms under $HOME/CommonSourceCodeProject/emu{Machine Name}/ , this directory has made
     after first using.
   
   ・Config file, {foo}.ini is written on $HOME/.config/CommonSourceCodeProject/emu{Machine Name}/ .
   
   ・Saved state file, {foo}.sta is written on $HOME/CommonSourceCodeProject/emu{Machine Name}/ .
   
   ・Key code conversion file is written on $HOME/.config/CommonSourceCodeProject/emu{Machine Name}/scancode.cfg .
   
     This file contains comma separated fields, written at hex-decimal (not decimal), 
       first is M$ Virtual Key Code,
       second is Qt's scan code.
       
   ・Common UI components (at src/qt/gui ) are moved to shared lib. libCSPgui.so .
   
   ・Installer (bash) script is available now; src/tool/installer_unix.sh .
   
   ・When you place specified WAV files(differ per VM) same directory as ROMs, you can sound sounds: i.e. FDD seek, CMT relay and buttons.
  
5.Status

a. I tested to build only under Debian GNU/Linux "sid",Ubuntu Linux 16.04LTS "Xenial" for AMD64 (x86_64)
and MinGW with GCC6 (Windows 32bit).

   But, perhaps, will succed to build another GNU/Linux OSs or BSD OS variants.
   
   * On windows, using MinGW is already okay, but not tested drawing.
   
   * Cross building with GNU/Linux's MinGW32 and Qt5.5.1 (for MinGW) is available. 
     Modify and use build-cmake/config_build_cross_win32.sh and related *.cmake files.
     
   * And, you can also build with M$ Visual Studio 2013 or 2015.

b. Now, I using Qt5 as toolkit, because authors of Qt announced "Qt4 is obsolete, will be updated no longer".

c. All of virtual machines are already ported to Qt (On Oct 29, 2015).

d. Now using GCC-6.1 with Link Time Optimize to build for distrubuted binaries.

e. Implemented socket, networking for MZ-2500, but, not tested yet (；´Д｀)

Repositry:

   https://github.com/Artanejp/common_source_project-fm7

   https://osdn.net/projects/csp-qt/scm/git/common_source_project-fm7


Project Page:

   https://osdn.jp/projects/csp-qt/

Upstream (Takeda Toshiya San's original code):

   http://takeda-toshiya.my.coocan.jp/

Special thanks to:
   Ryu Takegami-san, to assist debugging FM-7/77/AV/40/EX .
   Haserin-san, to assist debugging FM-7/77/AV/40/EX .
   
Changes:

* To see older changes, read ChangeLog and 000_gitlog.txt.

* SNAPSHOT August 07, 2018
  * Upstream 2018-05-24 .
  * [VM] Use VM_TEMPLATE, META-Class of VM::
  * [VM/FM7] Clear OPN/WHG/THG interrupt on resetting. Fix freeze when resetting after using RELICS.
  * [VM/FM7] DISPLAY: Not use CLR_HACK for MC6809 and delay using CLR to set busy flag.May be working MAGUS.Thanks to Anna_Wu.
  * [VM/MC6809] Remove dirty CLR insn hack.
  * [VM/DEVICE] Add DEVICE:: to libCSPcommon_vm.
  * [COMMON/Qt] Fix BYTEORDER of PIXEL@RGB888.
  * [UI/Qt][BUG] Fix crash with using LaserDisc(s).
  * [Qt/OpenGL] Initial support of OpenGL 4.3 Core profile.
  * [Qt/OpenGL] OpenGL 4.3 : Upload SCREEN using glMapBuffer().
  * [Qt/OpenGL] Use template class instead of GL2.0.
  * [UI/Qt] Separate some command line parsing to sub-routines.
  * [BUILD/WIN32] Update toolchain to Qt5.11.1.
  * [BUILD] Set SOVERSION and GIT hash automatically.
  * Built with df3888ca1199c6f75c1500dbb479d152ba6e2ad0 (or later).

-- August 07, 2018 03:58:14 +0900 K.Ohta <whatisthis.sowhat@gmail.com>

Upstream changes:
* To see older upstream's changes, read history.txt.

5/24/2018

[COMMON] import Mr.Artane.'s fixes (Commits on May 10, 2018)
[COMMON/FIFO] import Mr.Artane.'s fixes (Commits on May 10, 2018)
[EMU] support set_vm_screen_lines() (thanks Mr.Artane.)
[EMU] fix interfaces for bubble cassette
[EMU] add interfaces for hard disk
[WINMAIN] add interfaces for hard disk

[VM/DEVICE] support read_debug_reg()
[VM/DISK] import Mr.Artane.'s fixes (Commits on May 10, 2018)
[VM/HARDDISK] support hard disk handler
[VM/I286] improve i286 core based on MAME 0.197
[VM/I286] support read_debug_reg()
[VM/I386] support read_debug_reg()
[VM/I8237] fix verify command
[VM/I8237] support to read bank register by read_signal()
[VM/MC6809] import Mr.Artane.'s fixes (Commits on May 10, 2018)
[VM/SCSI_DEV] support SASI specify command
[VM/SCSI_HDD] improve to use hard disk handler
[VM/SCSI_HOST] support to read ack signal

[BUBCOM80] support Systems Formulate BUBCOM80
[FM77AV] import Mr.Artane.'s fixes (Commits on May 10, 2018)
[FMR30] support to change hard disk image
[FMR50] support to change hard disk image
[FMR50/BIOS] improve to use hard disk handler
[MZ2500] support to select floppy drive type 2DD/2D
[MZ2500] support to change hard disk image
[MZ2500/MZ1E30] reimplent SASI I/F with general SCSI host/hard disk device
[PC9801/CPUREG] support NMI enable/disable
[PC9801/MEMBUS] improve for 24bit/32bit address
[PC9801/SASI] support SASI I/F and hard disk drives
[X1TURBO/SASI] support SASI I/F and hard disk drives

-----


Have fun!
-- Ohta.

