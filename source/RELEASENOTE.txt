** Qt porting and FM-7/77/AV/AV40/EX for Common Source Code Project **

                                                       June 26, 2020
                            K.Ohta  (whatisthis.sowhat _at_ gmail.com)

1.About

This package is Qt5 porting of Common Source Code Project (CSP)
and built with Qt5, for Windows, built with MinGW(32bit).

Source Code:

   https://github.com/Artanejp/common_source_project-fm7/releases/tag/SNAPSHOT_20200626
   
Additional INFO:

   Binaries will be available, distibute from osdn.net.
   
   See, https://osdn.net/projects/csp-qt/  and
        https://osdn.net/projects/csp-qt/releases/ .
	
   Released at:


2.Background

Common Source Code Project (CSP) is good emulator writing.
It also distributed with GPLv2, this is good for me.

But codes are specified to M$ Visual C.
I'm using GNU/Linux, and I starting to apply FM-7(or later).

So, I start to port to GNU/Linux and using Qt4/Qt5.

What you need at least:

a. Qt5 (neither Qt3 and Qt4) toolkit: Qt5.3 or later.

b. Some OpenGL implementation, maybe at leaset OpenGL v2.x .

c. gcc / g++ (5.0 or later? ) or llvm clang / clang++ (3.5 or later?) toolchain.

d. SDL2 (not SDL1.x).

e. CMake 2.8 or later.

f. Needs ffmpeg.See https://ffmpeg.org/ .

g. FFMpeg has bundled only for Win32.Please install for other OSs if not working.

h. Built with Qt5.5 (for Ubuntu 16.04LTS) or Qt 5.10 (for Win32 and Debian/Sid).

i. Now, changed default drawing infrastructure to OpenGL ES2.You can change --opengl option via comman line (or GUI).

j. Now for Win32 build, using LLVM CLANG cross toolchains on Docker environment.Because exception handling of MinGW-w64's gcc is very slowly (this cause by *evil* Borland).
  See https://github.com/Artanejp/llvm-mingw and https://hub.docker.com/r/artanejp/llvm-mingw64-ubuntu-cosmic for datails.
  
* TIPS: If emufoo.exe don't show screen drawing, set environment variable QT_OPENGL to software (i.e. Using Windows as VirtualBox's gueat OS).

3.How to build:

After extracting (or git pulled) sourcecodes:

$ cd {srctop}/source/build-cmake/{Machine name}/

$ mkdir build

$ cd build

To configure:

$ cmake ..

or

$ ccmake ..

To build:

$ make

To install:

$ sudo make install

4.Qt specified notice:
   
   ・Config file (scancode.cfg and foo.ini) has placed (moved) to
     "~/.config/CommonSourceCodeProject/emufoo/"
     (for Windows, ".\CommonSourceCodeProject\emudfoo\" ).
   
   ・BIOS, WAVS, BINS and SAVED STATES have placed (moved) to
     "~/CommonSourceCodeProject/emufoo/"
     (for Windows, ".\CommonSourceCodeProject\emudfoo\" ).
   
   ・All of recorded products (PNG Screenshots, MOVIES, SOUNDS) 
     have *temporally* written to "~/.config/CommonSourceCodeProject/emufoo/"
     (for Windows, ".\CommonSourceCodeProject\emudfoo\" ).
   
   ・Added ToolTips and Japanese translations.(2017-01-24)
   
   ・Place R@Ms under $HOME/CommonSourceCodeProject/emu{Machine Name}/ , this directory has made
     after first using.
   
   ・Config file, {foo}.ini is written on $HOME/.config/CommonSourceCodeProject/emu{Machine Name}/ .
   
   ・Saved state file, {foo}.sta is written on $HOME/CommonSourceCodeProject/emu{Machine Name}/ .
   
   ・Key code conversion file is written on $HOME/.config/CommonSourceCodeProject/emu{Machine Name}/scancode.cfg .
   
     This file contains comma separated fields, written at hex-decimal (not decimal), 
       first is M$ Virtual Key Code,
       second is Qt's scan code.
       
   ・Common UI components (at src/qt/gui ) are moved to shared lib. libCSPgui.so .
   
   ・Installer (bash) script is available now; src/tool/installer_unix.sh .
   
   ・When you place specified WAV files(differ per VM) same directory as ROMs, you can sound sounds: i.e. FDD seek, CMT relay and buttons.
  
5.Status

a. I tested to build only under Debian GNU/Linux "sid",Ubuntu Linux 16.04LTS "Xenial" for AMD64 (x86_64)
and MinGW with GCC6 (Windows 32bit).

   But, perhaps, will succed to build another GNU/Linux OSs or BSD OS variants.
   
   * On windows, using MinGW is already okay, but not tested drawing.
   
   * Cross building with GNU/Linux's MinGW32 and Qt5.5.1 (for MinGW) is available. 
     Modify and use build-cmake/config_build_cross_win32.sh and related *.cmake files.
     
   * And, you can also build with M$ Visual Studio 2013 or 2015.

b. Now, I using Qt5 as toolkit, because authors of Qt announced "Qt4 is obsolete, will be updated no longer".

c. All of virtual machines are already ported to Qt (On Oct 29, 2015).

d. Now using GCC-6.1 with Link Time Optimize to build for distrubuted binaries.

e. Implemented socket, networking for MZ-2500, but, not tested yet (；´Д｀)

Repositry:

   https://github.com/Artanejp/common_source_project-fm7

   https://osdn.net/projects/csp-qt/scm/git/common_source_project-fm7


Project Page:

   https://osdn.jp/projects/csp-qt/

Upstream (Takeda Toshiya San's original code):

   http://takeda-toshiya.my.coocan.jp/

Special thanks to:
   Ryu Takegami-san, to assist debugging FM-7/77/AV/40/EX .
   Haserin-san, to assist debugging FM-7/77/AV/40/EX .
   Developers of Ootake, give hints of emuPCEngine (from source code).
   Soji Yamakawa-San, author of TOWNS emulater "津軽",
                      and advice for my development a lot.  

Changes:

* To see older changes, read ChangeLog and 000_gitlog.txt.

* SNAPSHOT June 26, 2020
 * Upstream 2020-02-21.
 * [EMULATION] Now, emulation period is half of one frame.
               Because some devices (i.e. mouse) seems to need a short period.
               This may change to 1/4 of one frame (or not).
	       See event.cpp and qt/common/emu_thread.cpp (& more).
 * [VM/EMU] Important: now EMU:: class inherits EMU_TEMPLATE:: .
 * [VM/FMTOWNS] Still works initially.
                See source/src/vm/fmtowns/00_status.ja.md, 
                STATUS section of doc/VMs/fmtowns.txt
		and 000_gitlog.txt .
 * [VM/DEVICE][DEBUGGER] Add Call trace feature to I386_NP21.
                         DEVICE::'s API HAS CHANGED.
 * [VM/EVENT][Qt] execute event->drive() (or event->run()) by half frame.
                  This is workaround for choppy mouse pointer/joystick.
 * [VM/DEBUGGER] Add logging to "UCT" (Call trace) command.
 * [VM][CONFIG] Add variable memory size feature to some VMs.See eFMTOWNS. 
 * [Qt/OpenGL4_5] Draw: Fix crash with external mapping (immutable storage).
                        Still not implement reading buffer.
 * [COMMON/FIFO] Add FIFO::fifo_size() and FIFO::left().Update SOVERSION.
 * [BUILD/CMake] Win32: Update toolchain for LLVM10.x and Ubuntu20.04 
                 (Has uploaded to 
		 https://hub.docker.com/repository/docker/artanejp/mingw-w64-llvm10-ubuntu20.04/general ).
 * [VM/FMGEN][VM/YM2612][VM/FMTOWNS] Fix prescaler value, calculating for own OPN2.
 * [VM/I386_NP21] Merge Upstream 2020-04-06 's I386::/NP21.Belows are differ from upstream:
      - Make some memory access functions inline (these are bottoleneck of emulation).
      - And some modifies are same as SNAPSHOT March 03, 2020. 
 * [VM/I386_NP21] Optimise for speed, make some functions __inline__ .
 * [VM/I386_NP21] Fix EDX value at resetting.
 * [VM/I386_NP21] Temporally enable FPU for i386.
 * [VM/I386_NP21][DEBUGGER] WIP: Adding exception handling.
 * [VM/I386_NP21] Log when made panic.
 * [VM/I386_NP21] Add undefined instruction "0F A6".
                  This may act as "int 6".Thanks to Soji Yamakawa-San.
 * [VM/I386_NP21] FPU: FISTTP INSNs (prefix DF) are only later than Pentium 4, 
                  not exists I386/486/Pentium.
 * [VM/I386_NP21] Disable FPU with I386, enable with I486SX.
 * [VM/I386_NP21] Change FPUemul to DOSBOX2 (temporally).
 * [VM/I386_NP21] Initialize CR0 to 0x00000000 (+some bits) for i386.
 * [VM/I386_NP21] *Perhaps* REPNE MOVS[B|W|D] don't dedicate Z flag, 
                  Thanks to Soji Yamakawa-San.
 * [VM/I386_NP21] Fix FTBFS with LLVM CLANG++.
 * [VM/I386_NP21] Add interrupt within rep prefix'ed ops.
 * [VM/UPD71071] Modify handling of 16bit transfer mode.
 * [VM/UPD71071] TOWNS_DMAC: Implement *truely* 16bit transfer feature 
                             from Renesas(NEC Electronics)'s DATA SHEET.
 * [VM/UPD71071] TOWNS_DMAC: Ugly workaround for 16bit transfer DMAC command.
                             Will fix.
 * [VM/UPD71071] Change mean of TC bus bits (per channel).See mz2800.cpp.
 * [VM/UPD71071] TOWNS_DMAC: Fix mandatory name with "mask" variable/arg.
 * [VM/UPD71071] Adjust status of on-demand-mode.
 * [VM/I8253] Add debugger feature, still reading only.
 * [VM/DEBUGGER] Add "RH" command to debugger and 
                 bool get_debug_regs_description(_TCHAR *, size_t) to API.
 * [VM/FMTOWNS] FONTROMS: Add API read_direct_data8() to reading faster by CRTC.
 * [VM/FM8] Fix warning from EVENT:: when resetting.
 * [VM/SCSI] Add new (pseudo) SIGNAL for preparing to use buffered transfer.
 * [Qt/LOGGER] Shrink redundant title.
 * [VM/LOGGER][OSD][VM_TEMPLATE] Add API to log with VM's time.
 * [OSD/Qt]Remove mouse position limiter.
 * [UI/Qt] Virtual media: Adjust width of "HDx:".
 * [UI/Qt] Add filename feature to Virtual-Media indicator.
 * [UI/Qt] Adjust width for HDD.
 * [UI/Qt][OSD] Add tooltip for virtual medias.
 * [UI/Qt] CDROM: Add "SWAP BYTE ORDER for AUDIO" config entry.
 * [OSD/Qt][LOGGER] Fix linkage error for LLD 10.x and Win32 cross.
 * Built with f5a2505cb38b92ae68df12f306ba03eeb5b836cd (or later).

-- Jun 26, 2020 19:41:26 +0900 K.Ohta <whatisthis.sowhat@gmail.com>

Upstream changes:
* To see older upstream's changes, read history.txt.

4/6/2020

[VM/I386_NP21] update to Neko Project 21/W ver0.86 rev72


-----


Have fun!
-- Ohta.

