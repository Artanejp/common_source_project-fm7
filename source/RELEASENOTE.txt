** Qt porting and FM-7/77/AV/AV40/EX for Common Source Code Project **

                                                       May 18, 2019
                            K.Ohta  (whatisthis.sowhat _at_ gmail.com)

1.About

This package is Qt5 porting of Common Source Code Project (CSP)
and built with Qt5, for Windows, built with MinGW(32bit).

Source Code:

   https://github.com/Artanejp/common_source_project-fm7/releases/tag/SNAPSHOT_20190518
   
Additional INFO:

   Binaries will be available, distibute from osdn.net.
   
   See, https://osdn.net/projects/csp-qt/  and
        https://osdn.net/projects/csp-qt/releases/ .
	
   Released at:


2.Background

Common Source Code Project (CSP) is good emulator writing.
It also distributed with GPLv2, this is good for me.

But codes are specified to M$ Visual C.
I'm using GNU/Linux, and I starting to apply FM-7(or later).

So, I start to port to GNU/Linux and using Qt4/Qt5.

What you need at least:

a. Qt5 (neither Qt3 and Qt4) toolkit: Qt5.3 or later.

b. Some OpenGL implementation, maybe at leaset OpenGL v2.x .

c. gcc / g++ (5.0 or later? ) or llvm clang / clang++ (3.5 or later?) toolchain.

d. SDL2 (not SDL1.x).

e. CMake 2.8 or later.

f. Needs ffmpeg.See https://ffmpeg.org/ .

g. FFMpeg has bundled only for Win32.Please install for other OSs if not working.

h. Built with Qt5.5 (for Ubuntu 16.04LTS) or Qt 5.10 (for Win32 and Debian/Sid).

i. Now, changed default drawing infrastructure to OpenGL ES2.You can change --opengl option via comman line (or GUI).

* TIPS: If emufoo.exe don't show screen drawing, set environment variable QT_OPENGL to software (i.e. Using Windows as VirtualBox's gueat OS).


3.How to build:

After extracting (or git pulled) sourcecodes:

$ cd {srctop}/source/build-cmake/{Machine name}/

$ mkdir build

$ cd build

To configure:

$ cmake ..

or

$ ccmake ..

To build:

$ make

To install:

$ sudo make install

4.Qt specified notice:
   
   ・Config file (scancode.cfg and foo.ini) has placed (moved) to
     "~/.config/CommonSourceCodeProject/emufoo/"
     (for Windows, ".\CommonSourceCodeProject\emudfoo\" ).
   
   ・BIOS, WAVS, BINS and SAVED STATES have placed (moved) to
     "~/CommonSourceCodeProject/emufoo/"
     (for Windows, ".\CommonSourceCodeProject\emudfoo\" ).
   
   ・All of recorded products (PNG Screenshots, MOVIES, SOUNDS) 
     have *temporally* written to "~/.config/CommonSourceCodeProject/emufoo/"
     (for Windows, ".\CommonSourceCodeProject\emudfoo\" ).
   
   ・Added ToolTips and Japanese translations.(2017-01-24)
   
   ・Place R@Ms under $HOME/CommonSourceCodeProject/emu{Machine Name}/ , this directory has made
     after first using.
   
   ・Config file, {foo}.ini is written on $HOME/.config/CommonSourceCodeProject/emu{Machine Name}/ .
   
   ・Saved state file, {foo}.sta is written on $HOME/CommonSourceCodeProject/emu{Machine Name}/ .
   
   ・Key code conversion file is written on $HOME/.config/CommonSourceCodeProject/emu{Machine Name}/scancode.cfg .
   
     This file contains comma separated fields, written at hex-decimal (not decimal), 
       first is M$ Virtual Key Code,
       second is Qt's scan code.
       
   ・Common UI components (at src/qt/gui ) are moved to shared lib. libCSPgui.so .
   
   ・Installer (bash) script is available now; src/tool/installer_unix.sh .
   
   ・When you place specified WAV files(differ per VM) same directory as ROMs, you can sound sounds: i.e. FDD seek, CMT relay and buttons.
  
5.Status

a. I tested to build only under Debian GNU/Linux "sid",Ubuntu Linux 16.04LTS "Xenial" for AMD64 (x86_64)
and MinGW with GCC6 (Windows 32bit).

   But, perhaps, will succed to build another GNU/Linux OSs or BSD OS variants.
   
   * On windows, using MinGW is already okay, but not tested drawing.
   
   * Cross building with GNU/Linux's MinGW32 and Qt5.5.1 (for MinGW) is available. 
     Modify and use build-cmake/config_build_cross_win32.sh and related *.cmake files.
     
   * And, you can also build with M$ Visual Studio 2013 or 2015.

b. Now, I using Qt5 as toolkit, because authors of Qt announced "Qt4 is obsolete, will be updated no longer".

c. All of virtual machines are already ported to Qt (On Oct 29, 2015).

d. Now using GCC-6.1 with Link Time Optimize to build for distrubuted binaries.

e. Implemented socket, networking for MZ-2500, but, not tested yet (；´Д｀)

Repositry:

   https://github.com/Artanejp/common_source_project-fm7

   https://osdn.net/projects/csp-qt/scm/git/common_source_project-fm7


Project Page:

   https://osdn.jp/projects/csp-qt/

Upstream (Takeda Toshiya San's original code):

   http://takeda-toshiya.my.coocan.jp/

Special thanks to:
   Ryu Takegami-san, to assist debugging FM-7/77/AV/40/EX .
   Haserin-san, to assist debugging FM-7/77/AV/40/EX .
   Developers of Ootake, give hints of emuPCEngine (from source code).
   
Changes:

* To see older changes, read ChangeLog and 000_gitlog.txt.

* SNAPSHOT May 18, 2019
  * Upstream 2019-04-30.
  * [General] Add Hino Electronics CEFUCOM-21.
  * [Build/GCC] Fix FTBFS without setting LTO_THREADS value and selecting USE_LTO.
  * [Build/Linux] buildvars.dat: Add "USE_SHRINK_DEBUG_SYMBOL" flag to save disk space.
  * [COMMON] Add high pass/low pass filter function.
  * [VM/PCM1BIT,AY3_891x] Add LPF feature.See initialize_sound().
  * [VM/EVENT] Add sound sampling (from host machine) feature framework.
  * [COMMON] Add RINGBUFFER:: class, extend of FIFO::.
  * [FIFO] Add [fill|empty] warning feature.This may be useful for some devices. i.e. 16550 UART, variants of i8251.
  * [FILEIO] Add StateVector() classes.
  * [VM/DEVICE] Add CPU pseudo SIGNALS, 108 to 110.
  * [VM/COMMON] Delete unneeded __builtin_assume_aligned().MinGW32 build works built with "-msse2 -O3".
  * [VM/DMA] Add NEW signal, notify to write-changed address.
  * [VM/EVENT] Add new APIs for recording sound.
  * [VM/PC9801RA] Note: Still not running Microsoft's EMM386.EXE and FreeBSD(98).Will fix.
  * [VM/PC9801] [SASI_BIOS] Fix wrong sectors at FORMAT command.Fix run out at DOS installation.
  * [VM/PC9801] Add some DIPSWITCH features.
  * [VM/PC9801,FMR50,FMR30][SASI_BIOS] Add translate_address(segment,offset) to DEVICE:: .
  * [VM/PC9801,FMR50] Add pseudo-cycles args to  pseudo-bios for i86/286/386.
  * [VM/PC9801] Truely bootable MS-DOS 6.20,excepts EMM386.EXE.
  * [VM/PC9801][SOUND] Playable PCM of PC-9801-86.
  * [VM/PC9801][PC-9801-86] Mostly implement PC-9801-86 sound board.Touhou-Huumaroku (partly) works.
  * [VM/PC9801][MEMBUS] Remove shadow_memory, this includes ram[0xc0000]-ram[0xe7fff].
  * [VM/PC9801][MEMBUS] Maybe complete to set mapping bus to 32bit VMs except Hi-Reso.
  * [VM/PC9801][MEMBUS] Faster memory access.
  * [VM/PC9801][EGC] Make EGC faster (maybe...).
  * [VM/PC9801][CPUREG] Add ARCTIC (a.k.a Timestamp) and 0.6uS? Wait.
  * [VM/PC9801][SASI_BIOS] Improve SENSE command.Write results to 0000:0585h at INITIALIZE.
  * [VM/PC9801][DISPLAY] EGC: Add write protect register (03h).
  * [VM/PC9801][FLOPPY] Improve drive setting via 2DD <-> 2HD.
  * [VM/PC9801][MOUSE] Set clock to 120Hz when resetting.
  * [VM/PC9801] Support low resolution monitor.This is WIP.
  * [VM/PC9801][VM/I386,I286] Add variable (main) CPU clock via CPU's write_signal().Add cpu_wait_foo() with CPU_EXECUTE(foo) .
  * [VM/PC9801RA] Enable to boot contains i386 CPU with (about) correctness ITF and IPL.
  * [VM/PC9801RA] Enable EGC.
  * [VM/I386] Separate I386_OP(int) to I386_OP(int_16) and I386_OP(int_32) because pseudo bios int call (maybe 1Bh) should be in 16bit mode.
  * [VM/I386] Enable debug log (logerror()).
  * [VM/I386] Improve CALL ABS SELECTOR:OFFSET.
  * [VM/I386] Call PSEUDO-BIOS even VM86 mode, EMM386.EXE for FreeDOS(98) and VEM486 (at MS-DOS 6.2) may work(still unstable a bit).
              Some games, i.e. Touhou-KaikiDan work now.
  * [VM/I386] Faster FETCH/READ.
  * [VM/I386] Make some functions around address translation INLINE.
  * [VM/I386] Fix unexpected page fault when accessing memories.
  * [VM/I386] Try to call pseudo-bios even within protected mode (inside of i386_trap()).
  * [VM/DEVICE,I386,I286] Add total_icount via read_signal().To implement PC-9801's clock counter.
  * [VM/DEVICE] Add address_translate() API to generic devices.
  * [VM/I8237] Debug register dump: Add "BANK" registers.
  * [VM/I286][PC9801] Add SIG_I386_FORCE_RESET to notify resetting to external devices.Fix "A20 ERROR" at rebooting PC-9801(32BIT MODELS) with rebooting from program.
  * [VM/UPD7220][PC9801] Add GDC clock feature. UPD7220::set_clock_freq().
  * [VM/UPD7220] Implement position limiter for drawing (line etc).You may set gdc_foo->set_screen_width() and gdc_foo->set_screen_height().
  * [VM/UPD7220] Apply "uPD7220 Design manual".make FIFO as ring buffer.
  * [VM/UPD7220] More precision emulation.
  * [VM/UPD7220][COMMON_VM] Integrate UPD7220_BASE:: and UPD7220:: to UPD7220:: .
  * [VM/UPD7220] Fix not blink cursor.
  * [VM/UPD7220] Improve around command interpret.This makes apply *real* command-queue-empty to IO 00h:BIT2.
  * [VM/UPD7220][PC9801] Add UGLY PC98 HACK to UPD7220:: from NP2.
  * [VM/UPD7220] Update around SYNC and drawing(WIP).
  * [VM/YM2203] Fix wrong status reply at address #3.
  * [VM/MEMORY] Faster memory access.
  * [VM/MC6809][COMMON] Improve disassembler.Thanks to HASERIN-San.
  * [VM/MC6809][DISASM] Fix offset address around INDEX addressing.
  * [VM/PC9801][MEMORY] Add new API at copy_table_[r|w|rw](to, start, end).
  * [VM/PC9801][DISPLAY] Faster accessable GDC.
  * [VM/PC9801][DISPLAY] More faster VRAM access (via EGC/GRCG).
  * [VM/PC9801][SASI_BIOS] Fix status values of SASI commands.
  * [VM/LIBCPU_NEWDEV] Remove deprecated classes.
  * [BUILD/WIN32] Adjust GCC option for MinGW.
  * [QT/MENU_FLAGS] Fix TYPO.
  * [QT/EMU,OSD] Adjust emulation sequence.
  * Built with 88b18e84a6e8049da97d15ddc96d5acf30b1fcb5 (or later).

-- May 18, 2019 23:00:59 +0900 K.Ohta <whatisthis.sowhat@gmail.com>
  
Upstream changes:
* To see older upstream's changes, read history.txt.

4/30/2019

[VM/DEVICE] add is_primary_cpu() and update_extra_event()
[VM/EVENT] support to udpate event while cpu is running one opecode
[VM/I8259] fix reading isr register (thanks Mr.rednow)
[VM/SCSI_HOST] fix to raise irq at command/message phase
[VM/Z80] improve to update event in every read/write cycle

[CEFUCOM21] support Hino Electronics CEFUCOM-21 (not work)
[MZ2500/CRTC] apply crtc patch (thanks Mr.Koucha-Youkan)
[PC8801MA] improve to enable/disable cmdsing and pcg
[PC8801MA] improve to enable/disable changing palette for each scan line

-----


Have fun!
-- Ohta.

