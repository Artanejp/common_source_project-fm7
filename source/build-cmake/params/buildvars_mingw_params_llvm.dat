################
#
# This is build-parameters fo LLVM/MinGW.
# Neither for GCC and LLVM/Linux .
#

MAKEFLAGS_BASE2="${MAKEFLAGS_BASE}"

case ${MAJOR_ARCH} in
   "AMD64" | "amd64" | "x86_64" | "X86_64" )
   . ${BASE_PATH}/params/archdef_x86_64.dat
   ;;
   "IA32" | "ia32" | "x86" | "X86" )
   . ${BASE_PATH}/params/archdef_ia32.dat
   ;;
   * )
   ARCH_FLAGS=""
   ;;
esac

case ${CSP_DEBUG} in
   "Yes" | "yes" | "YES" )
         MAKEFLAGS_BASE2="-g -ggdb \
	                  ${MAKEFLAGS_BASE} \
	                  -O2 -std=c++11 \
	                  -DNDEBUG"
         MAKEFLAGS_LINK_BASE="-g -ggdb \
	                  ${MAKEFLAGS_BASE} \
	                  -O2 -std=c++11 \
	                  -DNDEBUG"
         ;;
   "No" | "no" | "NO" | * )
         MAKEFLAGS_BASE2="-O3 ${MAKEFLAGS_BASE} -DNDEBUG \
	 					  -std=c++0x \
						  -Wreserved-user-defined-literal \
						  -D_HAS_EXCEPTIONS \
						  -D__float128=\"long double\"
						  "
         MAKEFLAGS_LINK_BASE="-s ${MAKEFLAGS_BASE}"
         ;;
esac

case ${USE_WHOLE_PROGRAM_OPTIMIZE} in
   "Yes" | "yes" | "YES" )
      LTO_FLAGS="-fwhole-program"
      ;;
   * )
      LTO_FLAGS=""
      ;;
esac

case ${USE_SANITIZER} in
   "Yes" | "yes" | "YES" )
      MAKEFLAGS_BASE3="${MAKEFLAGS_BASE3} \
	       -fsanitize=address \
	       -fsanitize=undefined \
	       -fsanitize=vptr \
		   "
		   ;;
   "No" | "no" | "NO" | * )
		   ;;
esac	

case ${USE_STACK_PROTECTION} in
   "Yes" | "yes" | "YES" )
      MAKEFLAGS_BASE3="${MAKEFLAGS_BASE3} \
	       -fstack-protector \
		   "
		   ;;
   "All" | "all" | "ALL" )
      MAKEFLAGS_BASE3="${MAKEFLAGS_BASE3} \
	       -fstack-protector-all \
		   "
		   ;;
   "Strong" | "strong" | "STRONG" )
      MAKEFLAGS_BASE3="${MAKEFLAGS_BASE3} \
	       -fstack-protector-strong \
		   "
		   ;;
   "No" | "no" | "NO" )
      MAKEFLAGS_BASE3="${MAKEFLAGS_BASE3} \
	       -fno-stack-protector \
		   "		   
		   ;;
   "Default" | "default" | "DEFAULT" | * )
           ;;
esac	

case ${COMPRESS_SYMBOLS} in
   "Yes" | "yes" | "YES" )
   COMPRESS_CFLAGS="-gz"
   ;;
   "No" | "no" | "NO" | * )
   COMPRESS_CFLAGS=""
   ;;
esac

case ${USE_LTO} in
   "Yes" | "yes" | "YES" )
       MAKEFLAGS_LINK_BASE2="-flto=${LTO_THREADS} ${LTO_FLAGS} ${MAKEFLAGS_BASE2}"
       MAKEFLAGS_BASE2="-flto ${MAKEFLAGS_BASE2}"
       ;;
   "No" | "no" | "NO" | * )
       MAKEFLAGS_LINK_BASE2="${MAKEFLAGS_BASE2}"
       MAKEFLAGS_BASE2="${MAKEFLAGS_BASE2}"
       ;;
esac
case ${USE_OPENMP} in
   "Yes" | "yes" | "YES" )
     CMAKE_APPENDFLAG="${CMAKE_APPENDFLAG} -DUSE_OPENMP=YES"
   ;;
   "No" | "no" | "NO" | * )
     CMAKE_APPENDFLAG="${CMAKE_APPENDFLAG} -DUSE_OPENMP=NO"
   ;;
esac

case ${CROSS_BUILD} in
    "Yes" | "YES" | "yes" | "1" )
        X_LDFLAGS=" \
	-DCMAKE_EXE_LINKER_FLAGS:STRING=-L/usr/${X_ARCH_PREFIX}w64-mingw32/lib \
	-DCMAKE_SHARED_LINKER_FLAGS:STRING=-L/usr/${X_ARCH_PREFIX}w64-mingw32/lib \
	-DCMAKE_LINKER:STRING=/usr/bin/${X_ARCH_PREFIX}w64-mingw32-ld \
        "

	;;
     * )
        X_LDFLAGS=""
	;;
esac

CMAKE_APPENDFLAG="-DUSE_QT5_4_APIS=ON -DUSE_MOVIE_LOADER=ON \
                   -DUSE_MOVIE_SAVER=ON \
                   -DCMAKE_AR:STRING=i686-w64-mingw32-ar \
		   -DCMAKE_NM:STRING=i686-w64-mingw32-nm \
		   -DCMAKE_RANLIB:STRING=i686-w64-mingw32-ranlib \
		   ${X_LDFLAGS} \
		   "
#                   -DCMAKE_LD:STRING=i686-w64-mingw32-ld \
