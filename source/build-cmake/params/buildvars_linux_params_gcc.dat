################
#
# This is build-parameters fo GCC/Linux.
# Neither for GCC/MinGW and LLVM.
#
CCMAKE_CC=gcc
CCMAKE_CXX=g++

case ${USE_RADICAL_OPTIMIZE} in
   "Yes" | "yes" | "YES" )
      MAKEFLAGS_BASE3=" \
               -O3 \
               -fvect-cost-model=dynamic -ftree-vectorize \
               -ftree-loop-distribute-patterns \
	       -ftree-loop-optimize -ftree-loop-if-convert-stores \
	       -fbranch-probabilities -fbranch-target-load-optimize \
	       -fselective-scheduling -fsel-sched-pipelining -fsel-sched-pipelining-outer-loops \
	       -funroll-loops \
	       -fgraphite-identity \
	       -floop-nest-optimize \
	       -msse -msse2 \
	       -Wall \
               ${MAKEFLAGS_BASE} \
	       "
	       ;;
   "No" | "no" | "NO" | * )
      MAKEFLAGS_BASE3=" \
               -O2 \
	       -funroll-loops \
	       -floop-nest-optimize \
	       -msse -msse2 \
               ${MAKEFLAGS_BASE} \
	       "
	       ;;
esac


case ${CSP_DEBUG} in
   "Yes" | "yes" | "YES" )
      MAKEFLAGS_BASE2="-g -ggdb ${MAKEFLAGS_BASE3} -DNDEBUG"
      ;;
   "No" | "no" | "NO" | * )
      MAKEFLAGS_BASE2="-g -ggdb ${MAKEFLAGS_BASE3}"
      ;;
esac

case ${USE_LTO} in
   "Yes" | "yes" | "YES" )
       MAKEFLAGS_LINK_BASE2="-flto=6 -fwhole-program ${MAKEFLAGS_BASE2}"
       MAKEFLAGS_BASE2="-flto -ffat-lto-objects ${MAKEFLAGS_BASE2}"
       ;;
   "No" | "no" | "NO" | * )
       MAKEFLAGS_LINK_BASE2="${MAKEFLAGS_BASE2}"
       MAKEFLAGS_BASE2="${MAKEFLAGS_BASE2}"
       ;;
esac

CMAKE_APPENDFLAG="${CMAKE_APPENDFLAG} \
                  -DCMAKE_AR:STRING=gcc-ar \
		  -DCMAKE_NM:STRING=gcc-nm \
		  -DCMAKE_RANLIB:STRING=gcc-ranlib \
		  "
